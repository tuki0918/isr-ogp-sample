import Head from 'next/head'
import dayjs from 'dayjs'
import timezone from 'dayjs/plugin/timezone'
import utc from 'dayjs/plugin/utc'

dayjs.extend(timezone)
dayjs.extend(utc)
dayjs.tz.setDefault("Asia/Tokyo")

const INTERVAL_SECOND = 20
const DATE_FORMAT_STYLE = "MM/DD HH:mm:ss"
const OGP_DATE_FORMAT_STYLE = "MM/DD HH:mm"
const OGP_IMG_WIDTH = 1200;
const OGP_IMG_HEIGHT = 630;

export default function Home({ createdAt, createdShortAt, nextCreatedAt }) {

  const title = `ISR Dynamic OGP | ${createdShortAt}`;
  const description = `Generated by create next app | ${createdShortAt}`;
  const imageUrl = `https://og-image.vercel.app/**OGP**%20${encodeURIComponent(createdShortAt)}.png?theme=light&md=1&fontSize=100px&images=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Ffront%2Fassets%2Fdesign%2Fvercel-triangle-black.svg`;

  return (
    <div className="container">
      <Head>
        <title>{title}</title>
        <meta name="description" content={description} />
        <link rel="icon" href="/favicon.ico" />

        {/* OGP */}
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:url" content="http://example.com/" />
        <meta property="og:type" content="website" />
        <meta property="og:image" content={imageUrl} />
        <meta property="og:image:width" content={OGP_IMG_WIDTH} />
        <meta property="og:image:height" content={OGP_IMG_HEIGHT} />

        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={description} />
        <meta name="twitter:image" content={imageUrl} />
        <meta name="twitter:card" content="summary_large_image" />

      </Head>

      <main>
        <h2>Interval</h2>
        <h1>{INTERVAL_SECOND}s</h1>
        <br />
        <h2>Page accessed time</h2>
        <h1>
          {dayjs().tz().format(DATE_FORMAT_STYLE)}
        </h1>
        <h2>Next HTML can be generated time</h2>
        <h1>
          {nextCreatedAt}
        </h1>
        <h2>HTML created time</h2>
        <h1>
          {createdAt}
        </h1>
        <p>
          <img src={imageUrl} width={OGP_IMG_WIDTH} height={OGP_IMG_HEIGHT} alt={""} />
        </p>
      </main>
    </div>
  )
}

export async function getStaticProps() {
  const currentTime = dayjs().tz()
  const createdAt = currentTime.format(DATE_FORMAT_STYLE)
  const createdShortAt = currentTime.format(OGP_DATE_FORMAT_STYLE)
  const nextCreatedAt = currentTime.add(INTERVAL_SECOND, 's').format(DATE_FORMAT_STYLE)

  return {
    props: {
      createdAt,
      createdShortAt,
      nextCreatedAt,
    },
    revalidate: INTERVAL_SECOND,
  }
}